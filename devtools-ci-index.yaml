- defaults:
    name: global
    timeout: '15m'
    jobdescription: "Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs"
    git_organization: almighty
    github_user: almighty-bot
    sub_job: ''

- admin_list_defaults: &admin_list_defaults
    name: 'admin_list_defaults'
    admin-list:
        - kbsingh
        - aslakknutsen
        - kwk
        - sbose78
        - tsmaeder
        - maxandersen
        - bartoszmajsak
        - pmuir
        - pranavgore09
        - baijum
        - DhritiShikhar
        - joshuawilson
        - Ritsyy
        - sanbornsen
        - nimishamukherjee
        - SMahil
        - xcoulon
        - alexeykazakov
        - michaelkleinhenz
        - ppitonak
        - naina-verma
        - ldimaggi
        - VineetReynolds
        - hectorj2f

- github_pull_request_defaults: &github_pull_request_defaults
    name: 'github_pull_request_defaults'  
    <<: *admin_list_defaults
    cron: '* * * * *'
    github-hooks: false
    permit-all: false
    trigger-phrase: '.*\[test\].*'
    allow-whitelist-orgs-as-admins: true
    status-context: "ci.centos.org PR build"

- trigger:
    name: githubprb
    triggers:
      - github-pull-request:
          <<: *github_pull_request_defaults
        
- scm:
    name: git-scm
    scm:
        - git:
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            url: "{git_url}"
            skip-tag: True
            git-tool: ci-git
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '${{ghprbActualCommit}}'

- job_template_defaults: &job_template_defaults
    name: 'job_template_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git-scm:
            git_url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
    triggers:
        - githubprb
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment)
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            git rebase --preserve-merges origin/${{ghprbTargetBranch}} \
            && rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
            && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
                cico node done $CICO_ssid
            else
                if [[ $rtn_code -eq 124 ]]; then
                   echo "BUILD TIMEOUT";
                   cico node done $CICO_ssid
                else
                    # fail mode gives us 12 hrs to debug the machine
                    curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
                fi
            fi 
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}'
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-coverage'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org PR build (coverage)"
          <<: *github_pull_request_defaults
    <<: *job_template_defaults


- job-template:
    name: '{ci_project}-{git_repo}-build-master'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches: 
                - master
    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment)
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              oc deploy {svc_name} --latest -n almighty
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code
            

- job-template:
    name: '{ci_project}-almighty-devdoc-build-master'
    description: |
      {jobdescription}
      If all goes well, gh-pages is pushed
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            branches: 
                - master

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment)
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            else
               rsync -delete -PHva -e "ssh $sshopts" $CICO_hostname:payload/ $(pwd)
               rtn_code=$?
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - git:
          push-only-if-success: true
          push-merge: true
          force-push: true
          branches:
            - branch:
                remote: origin
                name: "gh-pages"
- wrapper:
    name: dockerhub_credentials_wrapper
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: b2ae0d9a-307a-4df3-b027-9aa0c22e29dd
                username: RHCHEBOT_DOCKER_HUB_USERNAME
                password: RHCHEBOT_DOCKER_HUB_PASSWORD

- job:
    name: 'devtools-build-run-che-build-master'
    git_organization: kbsingh
    git_repo: build-run-che
    ci_project: 'devtools'
    ci_cmd: '/bin/bash cico_build.sh && /bin/bash cico_deploy.sh'
    svc_name: che
    timeout: '30m'
    wrappers:
        - dockerhub_credentials_wrapper
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/kbsingh/build-run-che/
    scm:
        - git:
            url: https://github.com/kbsingh/build-run-che.git
            shallow_clone: true
            branches: 
                - master
    triggers:
        - github
        - timed: '20 00,12 * * *' 
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment)
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_build.sh"
            rtn_code=$?
            cico node done $CICO_ssid
            if [ $rtn_code -eq 0 ]; then oc deploy che --latest -n almighty ; fi
            exit $rtn_code

- project:
    name: devtools
    jobs:
        - '{ci_project}-{git_repo}':
            git_repo: almighty-core
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-coverage':
            git_repo: almighty-core
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            timeout: '25m'
            sub_job: 'coverage'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8io
            git_repo: fabric8-planner
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '35m'
        - '{ci_project}-{git_repo}':
            git_repo: almighty-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8io
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-almighty-devdoc-build-master':
            git_repo: almighty-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-build-master':
            git_repo: almighty-core
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: core
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: fabric8-planner 
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: ui
            timeout: '35m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: f8ui
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: redhat-developer
            git_repo: che-starter
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: che-starter
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: obsidian-toaster
            git_repo: generator-frontend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: obsidian-generator-frontend
        - '{ci_project}-{git_repo}-build-master':
            git_organization: obsidian-toaster
            git_repo: generator-backend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: obsidian-generator-backend
