
- admin_list_defaults: &admin_list_defaults
    name: 'admin_list_defaults'
    admin-list:
        - kbsingh
        - aslakknutsen
        - kwk
        - sbose78
        - tsmaeder
        - maxandersen
        - bartoszmajsak
        - pmuir
        - pranavgore09
        - baijum
        - DhritiShikhar
        - joshuawilson
        - Ritsyy
        - sanbornsen
        - nimishamukherjee
        - SMahil
        - xcoulon
        - alexeykazakov
        - michaelkleinhenz
        - ppitonak
        - naina-verma
        - ldimaggi
        - VineetReynolds
        - hectorj2f
        - ibuziuk
        - debloper
        - vikram-raj
        - dlabrecq
        - dgutride

- github_pull_request_defaults: &github_pull_request_defaults
    name: 'github_pull_request_defaults'
    <<: *admin_list_defaults
    cron: '* * * * *'
    github-hooks: false
    permit-all: false
    trigger-phrase: '.*\[test\].*'
    allow-whitelist-orgs-as-admins: true
    status-context: "ci.centos.org PR build"

- trigger:
    name: githubprb
    triggers:
      - github-pull-request:
          <<: *github_pull_request_defaults

- scm:
    name: git-scm
    scm:
        - git:
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            url: "{git_url}"
            skip-tag: True
            git-tool: ci-git
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '${{ghprbActualCommit}}'

- wrapper:
    name: npm-build-deliver-creds
    wrappers:
        - credentials-binding:
            - text:
                credential-id: a9450b57-2492-4c47-9bd1-cabf87f74bb1
                variable: GH_TOKEN
            - text:
                credential-id: f8f7db1d-87c8-4f64-bae7-584142e44f8e
                variable: NPM_TOKEN

- job_template_defaults: &job_template_defaults
    name: 'job_template_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git-scm:
            git_url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
    triggers:
        - githubprb
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            git rebase --preserve-merges origin/${{ghprbTargetBranch}} \
            && rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
            && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
                cico node done $CICO_ssid
            else
                if [[ $rtn_code -eq 124 ]]; then
                   echo "BUILD TIMEOUT";
                   cico node done $CICO_ssid
                else
                    # fail mode gives us 12 hrs to debug the machine
                    curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
                fi
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}'
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-coverage'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org PR build (coverage)"
          <<: *github_pull_request_defaults
    <<: *job_template_defaults

- job-template: &job_template_build_defaults
    name: 'job_template_build_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              oc deploy {svc_name} --latest
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template: &job_template_publish_branch_defaults
    name: 'job_template_publish_branch_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - githubprb
    svc_name: none
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}-build-master'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-publish-branch'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
      - github-pull-request:
          white-list-target-branches:
             - '{branch}'
          <<: *github_pull_request_defaults
    <<: *job_template_publish_branch_defaults

- job-template:
    name: '{ci_project}-{git_repo}-build-master-coverage'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-npm-publish-build-master'
    description: |
      {jobdescription}
      If all goes well, npm is published
    node: "{ci_project}"
    wrappers:
            - npm-build-deliver-creds
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
        - inject:
            properties-content: |
               JENKINS_URL=https://ci.centos.org
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            skip-tag: True
            branches:
                - master

    triggers:
        - github
    svc_name: none
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-almighty-devdoc-build-master'
    description: |
      {jobdescription}
      If all goes well, gh-pages is pushed
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            branches:
                - master

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            else
               rsync -delete -PHva -e "ssh $sshopts" $CICO_hostname:payload/ $(pwd)
               rtn_code=$?
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - git:
          push-only-if-success: true
          push-merge: true
          force-push: true
          branches:
            - branch:
                remote: origin
                name: "gh-pages"
